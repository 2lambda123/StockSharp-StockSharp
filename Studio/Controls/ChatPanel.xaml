<controls:BaseStudioControl
			x:Class="StockSharp.Studio.Controls.ChatPanel"
			xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:loc="clr-namespace:StockSharp.Localization;assembly=StockSharp.Localization"
			xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			xmlns:grids="clr-namespace:Ecng.Xaml.Grids;assembly=Ecng.Xaml"
			xmlns:ex="clr-namespace:Ecng.Xaml;assembly=Ecng.Xaml"
			xmlns:editors="clr-namespace:ActiproSoftware.Windows.Controls.Editors;assembly=ActiproSoftware.Editors.Wpf"
			xmlns:controls="clr-namespace:StockSharp.Studio.Controls"
			xmlns:community="clr-namespace:StockSharp.Community;assembly=StockSharp.Community"
			xmlns:converters="clr-namespace:StockSharp.Studio.Controls.Converters"
			mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="500">

    <UserControl.Resources>
        <Style TargetType="{x:Type ex:BmpImage}" x:Key="BmpStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                    <Setter Property="Opacity" Value="0.3"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                
                                <!-- Note that the following do not work, but I believe the top 2 should?!
                                <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                                <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                                <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">-->
                                
                                <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Focusable" Value="false" />
                                            <Setter Property="Width" Value="16" />
                                            <Setter Property="Height" Value="16" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                            <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Bd" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True"
                                        Grid.Row="0" Grid.Column="1">
                                    <ContentPresenter x:Name="PART_Header" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}" ContentSource="Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <converters:HierarchyConverter x:Key="HierarchyConverter" />
        <converters:RootHierarchyConverter x:Key="RootHierarchyConverter" />
        <converters:UserNameConverter x:Key="UserNameConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <HierarchicalDataTemplate x:Key="ItemTemplate" DataType="controls:RoomItem">
            <HierarchicalDataTemplate.ItemsSource>
                <MultiBinding Converter="{StaticResource HierarchyConverter}">
                    <Binding ElementName="ChatRoomsTree" Path="DataContext"/>
                    <Binding Path="Room.Id"/>
                </MultiBinding>
            </HierarchicalDataTemplate.ItemsSource>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="{Binding Room.Name}" ToolTip="{Binding Room.Description}"/>
                <ex:BmpImage Grid.Column="1" Source="Images/envelope_16x16.png" Visibility="{Binding HasNewItems, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </HierarchicalDataTemplate>

        <DataTemplate x:Key="ChatMessageTemplate" DataType="community:ChatMessage">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="UserSharedGroup"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="DateTimeSharedGroup"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Margin="1,1,4,1" Text="{Binding AuthorId, Converter={StaticResource UserNameConverter}}"
                           Foreground="DimGray"/>
                <TextBlock Grid.Column="1" Margin="1" Text="{Binding Body}"/>
                <TextBlock Grid.Column="2" Margin="1" Text="{Binding CreationDate, StringFormat={}{0:dd.MM.yyyy HH:mm:ss}}"
                           Foreground="DimGray"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ChatJoinTemplate" DataType="community:ChatJoin">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="UserSharedGroup"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="DateTimeSharedGroup"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="1" Margin="1" Text="{Binding AuthorId, Converter={StaticResource UserNameConverter}}"/>
                <Button Grid.Column="2" Margin="1" Content="{x:Static loc:LocalizedStrings.XamlStr571}" Command="{x:Static controls:ChatPanel.AcceptJoinCommand}" CommandParameter="{Binding}"/>
                <Button Grid.Column="3" Margin="1" Content="{x:Static loc:LocalizedStrings.XamlStr405}" Command="{x:Static controls:ChatPanel.RejectJoinCommand}" CommandParameter="{Binding}"/>
            </Grid>
        </DataTemplate>

        <controls:MessageTemplateSelector x:Key="MessageTemplateSelector" JoinMessageTemplate="{StaticResource ChatJoinTemplate}"
                                            ChatMessageTemplate="{StaticResource ChatMessageTemplate}"/>
    </UserControl.Resources>

    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static controls:ChatPanel.CreateRoomCommand}"
                    Executed="ExecutedCreateRoomCommand"
                    CanExecute="CanExecuteCreateRoomCommand" />

        <CommandBinding Command="{x:Static controls:ChatPanel.DeleteRoomCommand}"
                    Executed="ExecutedDeleteRoomCommand"
                    CanExecute="CanExecuteDeleteRoomCommand" />

        <CommandBinding Command="{x:Static controls:ChatPanel.JoinRoomCommand}"
                    Executed="ExecutedJoinRoomCommand"
                    CanExecute="CanExecuteJoinRoomCommand" />

        <CommandBinding Command="{x:Static controls:ChatPanel.LeaveRoomCommand}"
                    Executed="ExecutedLeaveRoomCommand"
                    CanExecute="CanExecuteLeaveRoomCommand" />

        <CommandBinding Command="{x:Static controls:ChatPanel.SendMessageCommand}"
                    Executed="ExecutedSendMessageCommand"
                    CanExecute="CanExecuteSendMessageCommand" />

        <CommandBinding Command="{x:Static controls:ChatPanel.AcceptJoinCommand}"
                    Executed="ExecutedAcceptJoinCommand"
                    CanExecute="CanExecuteAcceptJoinCommand" />

        <CommandBinding Command="{x:Static controls:ChatPanel.RejectJoinCommand}"
                    Executed="ExecutedRejectJoinCommand"
                    CanExecute="CanExecuteRejectJoinCommand" />
    </UserControl.CommandBindings>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ToolBar Grid.Row="0" Grid.Column="1">
            <!--<local:CredentialsPicker Grid.Row="3" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                     x:Name="CredentialsPicker" Click="CredentialsPicker_OnClick" />

            <Separator/>-->

            <Button ToolTip="{x:Static loc:LocalizedStrings.XamlStr670}" ToolTipService.ShowOnDisabled="True" Command="{x:Static controls:ChatPanel.CreateRoomCommand}">
				<ex:BmpImage Source="pack://application:,,,/StockSharp.Xaml;component/Images/add_16x16.png" Style="{StaticResource BmpStyle}"/>
            </Button>
            <Button ToolTip="{x:Static loc:LocalizedStrings.XamlStr790}" ToolTipService.ShowOnDisabled="True" Command="{x:Static controls:ChatPanel.DeleteRoomCommand}">
				<ex:BmpImage Source="pack://application:,,,/StockSharp.Xaml;component/Images/remove_16x16.png" Style="{StaticResource BmpStyle}"/>
            </Button>

            <Separator/>

            <Button ToolTip="{x:Static loc:LocalizedStrings.Subscribe}" ToolTipService.ShowOnDisabled="True" Command="{x:Static controls:ChatPanel.JoinRoomCommand}">
                <ex:BmpImage Source="Images/subscribe_16x16.png" Style="{StaticResource BmpStyle}"/>
            </Button>
            <Button ToolTip="{x:Static loc:LocalizedStrings.XamlStr426}" ToolTipService.ShowOnDisabled="True" Command="{x:Static controls:ChatPanel.LeaveRoomCommand}">
                <ex:BmpImage Source="Images/unsubscribe_16x16.png" Style="{StaticResource BmpStyle}"/>
            </Button>
        </ToolBar>

        <ListBox Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Margin="3" x:Name="Messages" Grid.IsSharedSizeScope="True"
                 ItemTemplateSelector="{StaticResource MessageTemplateSelector}" ScrollViewer.ScrollChanged="Messages_OnScrollChanged">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <TreeView Grid.Row="1" Grid.Column="1" Margin="3" x:Name="ChatRoomsTree" ItemsSource="{Binding Converter={StaticResource RootHierarchyConverter}}"
            HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" SelectedItemChanged="ChatRoomsTree_OnSelectedItemChanged"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemTemplate="{StaticResource ItemTemplate}" ItemContainerStyle="{StaticResource TreeViewItemStyle}">
            <!--<TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded" Value="True"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                </Style>
            </TreeView.ItemContainerStyle>-->
        </TreeView>

        <grids:UniversalGrid Grid.Row="2" Grid.RowSpan="2" Grid.Column="1" Margin="3" x:Name="Users">
            <grids:UniversalGrid.Columns>
                <DataGridTextColumn Header="{x:Static loc:LocalizedStrings.Name}" Binding="{Binding Path=Name}" SortMemberPath="Name"/>
                <DataGridTextColumn Header="{x:Static loc:LocalizedStrings.Description}" Binding="{Binding Path=Description}" SortMemberPath="Description"/>
            </grids:UniversalGrid.Columns>
        </grids:UniversalGrid>

        <Grid Grid.Row="3" Grid.Column="0" Margin="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <editors:TextBox Grid.Column="0" Margin="3" Name="Message" Hint="{x:Static loc:LocalizedStrings.Str3213}" KeyDown="Message_OnKeyDown"/>

            <Button x:Name="Send" Grid.Column="1" Content="{x:Static loc:LocalizedStrings.XamlStr427}" Command="{x:Static controls:ChatPanel.SendMessageCommand}" />
        </Grid>
    </Grid>
</controls:BaseStudioControl>
