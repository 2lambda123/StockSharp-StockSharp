<?xml version="1.0" encoding="utf-8"?>
<topic id="e0f9d08e-5dba-4d5d-9248-4d37eba61b22" revisionNumber="0">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<summary>
			<para>
				<legacyBold>S#.API</legacyBold> - a free library for beginners and professionals in the field of algorithmic trading.
				S#.API is oriented to program on <token>csharp</token> in the Visual Studio environment, allowing to create absolutely any strategies:
				from positional strategies with a long timeframe to the high-frequency strategies (HFT) using direct access (DMA) to trading.
			</para>
			<para>
				S#.API is the foundation of all our products. Solutions like <token>designer</token>, <token>hydra</token>, etc. created on the basis of the library.
				And also our adapters <token>wealthlab</token> and <token>matlab</token>.
			</para>
			<para>
				S#.API uses special <link xlink:href="5794f4b0-c536-4713-ad08-955a4a01b196">messages</link>, which unify the development of adapters
				and easy to create <link xlink:href="fb79e67d-945c-493d-bdac-85d0040af828">own connectors</link> to any trading system.
			</para>
			
		</summary>
		
		<procedure>
			<title>The benefits and capabilities of the library:</title>
				<steps class="ordered">
					<step>
						<content>
						<legacyBold>Portability</legacyBold> - the algorithm does not depend on a broker or exchange API and can work with any connection.
						For example, it is easy to move from <token>ib</token> to <token>openecry</token>, or from Forex to the stock exchange. Details are in the <link xlink:href="87d2cacd-5492-4bca-9140-7d7c3f5218d7" /> section.
						</content>
					</step>	
					<step>
						<content>
						<legacyBold><link xlink:href="804b053f-e5f5-44ca-a381-6b39d6c099d5">All markets</link></legacyBold> - 
						the full support of the spot market, futures, options, forex and bitcoins.
						</content>
					</step>
					
					<step>
						<content>
						<legacyBold><link xlink:href="ad178c36-15c8-4314-bc5c-56220f41a67e">Global exchanges</link></legacyBold> - 
						NASDAQ, NYSE, CME, etc. trading by means of <token>OpenECry</token>, <token>IB</token>, <token>etrade</token> and
						<externalLink>
							<linkText>other brokers</linkText>
							<linkAlternateText>Broker-Partners</linkAlternateText>
							<linkUri>http://stocksharp.com/broker/</linkUri>
							<linkTarget>_blank</linkTarget>
						</externalLink>.
						</content>
					</step>
					<step>
						<content>
						<legacyBold>Versatility</legacyBold> - focused on private algorithmic traders, small teams, investment companies and banks.
						</content>
					</step>	
					
					<step>
						<content>
						<legacyBold>Performance</legacyBold> - the simultaneous execution of hundreds of strategies on any instruments.
						</content>
					</step>	
					
					<step>
						<content>
						<legacyBold>Speed</legacyBold> - the orders processing in the S#.API takes no more than a few microseconds.
						</content>
					</step>	
					
					<step>
						<content>
						<legacyBold>Direct connection</legacyBold> - 
						trading via a direct connection to the exchange using FIX/FAST protocol, as well as proprietary protocol support (ITCH etc.).
						</content>
					</step>	
					<step>
						<content>
						<legacyBold>Realistic backtesting</legacyBold> - the most accurate <link xlink:href="febbcf31-63d1-449d-847e-92fd8424f926">backtesting</link>
						on ticks and order books, determination of the actual slippage.
						</content>
					</step>	
					
					<step>
						<content>
						<legacyBold>Popularity</legacyBold> - widely used <token>csharp</token> language, popular programming environment Visual Studio.
						</content>
					</step>
					
				</steps>
		</procedure>
	
	
		<relatedTopics>
			<link xlink:href="87d2cacd-5492-4bca-9140-7d7c3f5218d7">StockSharp Architecture</link>
		</relatedTopics>

	</developerConceptualDocument>
</topic>