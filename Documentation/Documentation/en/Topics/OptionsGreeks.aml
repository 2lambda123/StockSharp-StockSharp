<?xml version="1.0" encoding="utf-8"?>
<topic id="063708c5-b6a8-45f6-9ff9-608f89796a88" revisionNumber="0">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    
	  <introduction>
		  <para>
			  The formula of <token>bs</token> is realized in the <token>stocksharp</token>  to calculate the basic “Greeks”: delta, gamma, vega, theta and rho.
			  The <link xlink:href="6fe5b321-a23d-415d-b3e3-af9de9212a20">volatility trading</link> and
			  <link xlink:href="598efa7f-83fb-4dc8-8822-e6776362f652">Delta-hedging</link> strategies are realized on the basis of this formula. Also <token>stocksharp</token>
			  allows you to calculate the option premium and <token>IV</token>. 
		  </para>
		  <para>The following code shows the <codeEntityReference>T:StockSharp.Algo.Derivatives.BlackScholes</codeEntityReference> class methods to calculate the “Greeks”.</para>
		  <code language="C#"><![CDATA[
var bs = new BlackScholes(option, trader, trader);

DateTimeOffset currentTime = DateTimeOffset.Now;

decimal delta = bs.Delta(currentTime);
decimal gamma = bs.Gamma(currentTime);
decimal vega = bs.Vega(currentTime);
decimal theta = bs.Theta(currentTime);
decimal rho = bs.Rho(currentTime);
decimal iv = bs.ImpliedVolatility(currentTime, premium);  // premium is premium of the option contract

]]>
			</code>
			<para>
		  	In addition the installation package includes the OptionCalculator example, in which all the “Greeks” are calculated and visualized using the
		  	<codeEntityReference>T:StockSharp.Xaml.OptionDesk</codeEntityReference> graphical component. See <link xlink:href="667d9230-82d2-4052-9e23-6cdd983d3461">Graphic components</link>.
		  </para>
	  </introduction>

	  <!-- <procedure>
		  <title>Опционный калькулятор</title>

		  <steps class="ordered">
			  <step>
				  <content>
					  <para>
					  </para>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  В начале создается шлюз с соответствующими настройками таблицы инструментов (подробнее, в разделе <link xlink:href="b85270c7-ee7f-4dbc-a0a3-aac466b75f98">Опционы</link>)
						  и заполняется выпадающий список с опционами:
					  </para>
					  <code language="C#">// создаем шлюз
_trader = new QuikTrader(this.Path.Text);

// изменяем метаданные так, чтобы начали обрабатывать дополнительные колонки опционов
var columns = _trader.SecuritiesTable.Columns;
columns.Add(DdeSecurityColumns.Strike);
columns.Add(DdeSecurityColumns.Volatility);
columns.Add(DdeSecurityColumns.UnderlyingSecurity);
columns.Add(DdeSecurityColumns.TheorPrice);
columns.Add(DdeSecurityColumns.OptionType);
columns.Add(DdeSecurityColumns.ExpiryDate);

// добавляем в выпадающий список только опционы
_trader.NewSecurities += securities =>
	this.GuiAsync(() => _options.AddRange(securities.Where(s => s.Type == SecurityTypes.Option)));

// подписываемся на событие новых сделок чтобы обновить текущую цену фьючерса
_trader.NewTrades += trades => this.GuiAsync(() =>
{
	var option = this.SelectedOption;
	if (option != null)
	{
		var future = option.GetUnderlyingAsset();
		if (future.LastTrade != null)
			this.BaseActivePrice.Text = future.LastTrade.Price.ToString();
	}
});

_trader.StartExport(new[] {_trader.SecuritiesTable, _trader.TradesTable});</code>
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  Расчет "греков" и <token>IV</token> осуществляется с помощью класса <codeEntityReference>T:StockSharp.Algo.Derivatives.BlackScholes</codeEntityReference>:
					  </para>
					 <para>
						  При расчете "греков" цена базового актива береться изходя из установленного режима в
						  <codeEntityReference qualifyHint="true">P:StockSharp.Algo.Derivatives.BlackScholes.SecurityPriceMode</codeEntityReference>.
						  По-умолчанию используется цена последней сделки из <codeEntityReference qualifyHint="true">P:StockSharp.BusinessEntities.Security.LastTrade</codeEntityReference>.
					  </para> 
				  </content>
			  </step>
			  <step>
				  <content>
					  <para>
						  Работающий пример OptionCalculator должен выглядеть следующим образом:
					  </para>
					  <mediaLink>
						  <image placement="center" xlink:href="sample_options_calc" />
					  </mediaLink>
				  </content>
			  </step>
		  </steps>
	  </procedure> 

    <relatedTopics>
    </relatedTopics> -->

  </developerConceptualDocument>
</topic>